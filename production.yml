version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  nginx_conf:
  static:
  media:
  certbot-www:
  certbot-conf:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: phonxis/beans_shop_production_django:latest
    container_name: django
    depends_on:
      - postgres
      - redis
    #env_file:
    #  - ./.envs/.production/.django
    #  - ./.envs/.production/.postgres
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ADMIN_URL=gG1lPTPACQQu6hYm0faZXr49IuI6YwfZ/
      - DJANGO_ALLOWED_HOSTS=beans.phonxis.online
      - DJANGO_SECURE_SSL_REDIRECT=False
      - DJANGO_SERVER_EMAIL=""
      - SENDINBLUE_API_KEY=""
      - GOOGLE_APPLICATION_CREDENTIALS=""
      - DJANGO_GCP_STORAGE_BUCKET_NAME=""
      - DJANGO_ACCOUNT_ALLOW_REGISTRATION=True
      - WEB_CONCURRENCY=4
      - REDIS_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=${CELERY_FLOWER_USER}
      - CELERY_FLOWER_PASSWORD=${CELERY_FLOWER_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DATABASE_URL=${DATABASE_URL}
    command: /start
    restart: always
    volumes:
      - static:/app/static
      - media:/app/media
    links:
      - postgres:postgres
    networks:
      - app_network

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: phonxis/beans_shop_production_postgres:latest
    container_name: postgresql
    restart: always
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    #env_file:
    #  - ./.envs/.production/.postgres
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ADMIN_URL=gG1lPTPACQQu6hYm0faZXr49IuI6YwfZ/
      - DJANGO_ALLOWED_HOSTS=beans.phonxis.online
      - DJANGO_SECURE_SSL_REDIRECT=False
      - DJANGO_SERVER_EMAIL=""
      - SENDINBLUE_API_KEY=""
      - GOOGLE_APPLICATION_CREDENTIALS=""
      - DJANGO_GCP_STORAGE_BUCKET_NAME=""
      - DJANGO_ACCOUNT_ALLOW_REGISTRATION=True
      - WEB_CONCURRENCY=4
      - REDIS_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=${CELERY_FLOWER_USER}
      - CELERY_FLOWER_PASSWORD=${CELERY_FLOWER_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - app_network

  #traefik:
  #  build:
  #    context: .
  #    dockerfile: ./compose/production/traefik/Dockerfile
  #  image: beans_shop_production_traefik
  #  depends_on:
  #    - django
  #  volumes:
  #    - production_traefik:/etc/traefik/acme
  #  ports:
  #    - "0.0.0.0:80:80"
  #    - "0.0.0.0:443:443"
  #    - "0.0.0.0:5555:5555"

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: phonxis/beans_shop_production_nginx:latest
    container_name: nginx
    restart: always
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - static:/static
      - media:/media
      - certbot-www:/var/www/certbot/:ro
      - certbot-conf:/etc/nginx/ssl/:ro
    depends_on:
      - django
    networks:
      - app_network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot-www:/var/www/certbot/:rw
      - certbot-conf:/etc/letsencrypt/:rw
      - /root:/var/lib/letsencrypt
    #command: certonly --webroot -w /var/www/certbot --force-renewal --email phonxis@gmail.com -d beans.phonxis.online -d beans.phonxis.xyz --agree-tos
    command: certonly --webroot -w /var/www/certbot --force-renewal --email phonxis@gmail.com -d beans.phonxis.xyz --agree-tos

  redis:
    image: redis:6
    container_name: redis
    restart: always
    networks:
      - app_network

  #celeryworker:
  #  <<: *django
  #  image: phonxis/beans_shop_production_celeryworker:latest
  #  container_name: celeryworker
  #  command: /start-celeryworker
  #  depends_on:
  #    - django
  #    - redis
  #  networks:
  #    - app_network

  #celerybeat:
  #  <<: *django
  #  image: phonxis/beans_shop_production_celerybeat:latest
  #  container_name: celerybeat
  #  command: /start-celerybeat
  #  depends_on:
  #    - django
  #    - redis
  #    - postgres
  #  networks:
  #    - app_network

  #flower:
  #  <<: *django
  #  image: beans_shop_production_flower
  #  command: /start-flower

networks:
  app_network:
    driver: bridge
